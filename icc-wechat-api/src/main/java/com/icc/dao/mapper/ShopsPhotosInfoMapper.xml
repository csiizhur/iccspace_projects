<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.icc.dao.ShopsPhotosInfoDao">

	<insert id="create">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into SHOPS_PHOTOS_INFO(
		id,
		shopsid,
		image_url1,
		image_url2,
		image_url3,
		deleted,
		image_name,
		oss_url,
		oss_upload_flg
		)
		values(
		#{id},
		#{shopsId},
		#{imageURL1},
		#{imageURL2},
		#{imageURL3},
		0,
		#{imageName},
		#{ossUrl},
		#{ossUploadFlg}
		)
	</insert>

	<select id="queryShopsPhotosListByShopsId" resultType="com.icc.entity.ShopsPhotosInfo">
		select ID,oss_url from SHOPS_PHOTOS_INFO
		where SHOPSID=#{shopsId} and DELETED=0
	</select>
	
	<!-- 批量insert -->
	<insert id="batchInsertPhotos" parameterType="java.util.List">
		insert into SHOPS_PHOTOS_INFO(ID,image_url1) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id},#{item.imageURL1,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	<!-- 批量update -->
	<update id="batchUpdatePhotos" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
       		update SHOPS_PHOTOS_INFO
        	<set>
            	DELETED=1
        	</set>
        	where ID = #{item}
   		</foreach>
	</update>
	
	<!-- 方式一: 嵌套结果: 使用嵌套结果映射来处理重复的联合结果的子集  -->
	<select id="queryShopAndPhotos" parameterType="java.lang.String"
		resultMap="ShopAndPhotoResultMap">
		select sh.id, sh.shops_name as shopsName, p.image_URL1,p.id
		as photosId from SHOPS_HISTORY sh, SHOPS_PHOTOS_INFO p where
		p.shopsid=sh.id
		and sh.id=#{id}
	</select>
	<resultMap type="com.icc.entity.ShopsHistory" id="ShopAndPhotoResultMap">
		<id property="id" column="id" />
		<result property="shopsName" column="shopsName" />
		<!-- <association property="teacher" column="teacher_id" javaType="me.gacl.domain.Teacher"> 
			<id property="id" column="t_id" /> <result property="name" column="t_name" 
			/> </association> -->
		<!-- ofType指定students集合中的对象类型 -->
		<collection property="photos" ofType="com.icc.entity.ShopsPhotosInfo">
			<id property="id" column="photosId" />
			<result property="imageURL1" column="image_URL1" />
		</collection>
	</resultMap>

	<!-- 方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型   -->
	<select id="queryShopAndPhotos2" parameterType="String" resultMap="ShopAndPhotoResultMap2">
		select * from SHOPS_HISTORY where id=#{shopsId}
	</select>
	<resultMap type="com.icc.entity.ShopsHistory" id="ShopAndPhotoResultMap2">
		<id property="id" column="id" />
		<result property="shopsName" column="shops_name" />
		<!-- <association property="teacher" column="teacher_id"
			javaType="me.gacl.domain.Teacher" select="getTeacher2"></association> -->
		<collection property="photos" ofType="com.icc.entity.ShopsPhotosInfo"
			column="id" select="getPhotos"></collection>
	</resultMap>

	<select id="getPhotos" parameterType="String" resultType="com.icc.entity.ShopsPhotosInfo">
		SELECT  id, image_url1 FROM SHOPS_PHOTOS_INFO WHERE shopsid=#{shopsId}
	</select>
</mapper>