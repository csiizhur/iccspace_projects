<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<context:component-scan base-package="com.icc.controller" />
	<mvc:annotation-driven conversion-service="conversionService">
       <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>        	
    </mvc:annotation-driven>
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.icc.common.DateConverter" />
                <bean class="com.icc.common.StringToTimestampConverter"></bean>
                <bean class="com.icc.common.StringToDateConverter"></bean>
            </set>
        </property>
    </bean>
    <!-- <mvc:annotation-driven conversion-service="conversionService"/>
    
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.icc.common.DateConverter" />
            </set>
        </property>
    </bean>
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
    	<property name="supportedMediaTypes">
    		<list>
    			<value>text/plain;charset=UTF-8</value>  
                <value>text/html;charset=UTF-8</value>
    		</list>
    	</property>
    </bean>  
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean> -->
	
	<!-- session验证 暂时关闭 -->
	<!-- <mvc:interceptors>  
    	使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求  
    	<bean class="com.icc.wechat.interceptor.APIInterceptor"/>
    	<mvc:interceptor>  
        	<mvc:mapping path="/user/getUserInfo/*"/>  
        	定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
        	<bean class="com.icc.wechat.interceptor.APIInterceptor"/>  
    	</mvc:interceptor>  
	</mvc:interceptors> -->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property><!--10000M  -->
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
</beans>